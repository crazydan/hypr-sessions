# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # General git hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        # args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=500']
      # - id: check-case-conflict
      # - id: check-merge-conflict
      # - id: check-symlinks
      # - id: check-executables-have-shebangs
      # - id: check-shebang-scripts-are-executable
      # - id: debug-statements
      # - id: mixed-line-ending
      #   args: ['--fix=lf']
      # - id: pretty-format-json
      #   args: ['--autofix']
      # - id: check-ast
      # - id: check-builtin-literals
      # - id: check-docstring-first
      # - id: name-tests-test
      #   args: ['--pytest-test-first']

  # Python code formatting with Ruff (replaces Black + isort + flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.11
    hooks:
      # Run the linter
      - id: ruff
        types_or: [python, pyi, jupyter]
        args: [--fix]
      # Run the formatter
      - id: ruff-format
        types_or: [python, pyi, jupyter]

  # Python type checking
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.17.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies:
  #         - types-toml
  #         - types-requests
  #         - rich
  #         - typer
  #         - verboselogs
  #       args: [--ignore-missing-imports, --strict]

  # Security scanning
  # - repo: https://github.com/PyCQA/bandit
  #   rev: 1.8.6
  #   hooks:
  #     - id: bandit
  #       args: ['-c', 'pyproject.toml']
  #       additional_dependencies: ['bandit[toml]']

  # Python docstring and code quality
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: ['--convention=google']

  # TOML formatting and validation
  # - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  #   rev: v2.15.0
  #   hooks:
  #     - id: pretty-format-toml
  #       args: [--autofix]

  # YAML and Markdown formatting
  # - repo: https://github.com/pre-commit/mirrors-prettier
  #   rev: v4.0.0-alpha.8
  #   hooks:
  #     - id: prettier
  #       types_or: [yaml, markdown, json]
  #       exclude: '\.vscode/.*\.json$'
  #       additional_dependencies:
  #         - prettier@3.3.3

  # Shell script linting
  # - repo: https://github.com/shellcheck-py/shellcheck-py
  #   rev: v0.11.0.1
  #   hooks:
  #     - id: shellcheck

  # Commit message validation (conventional commits)
  # - repo: https://github.com/commitizen-tools/commitizen
  #   rev: v4.8.3
  #   hooks:
  #     - id: commitizen
  #       stages: [commit-msg]

  # Python dependency security and license check
  # - repo: https://github.com/pyupio/safety
  #   rev: 3.6.0
  #   hooks:
  #     - id: safety
  #       args: [--ignore=70612, --ignore=71064]  # Ignore known false positives

  # Additional Python code quality checks
  # - repo: https://github.com/pycqa/flake8
  #   rev: 7.1.1
  #   hooks:
  #     - id: flake8
  #       additional_dependencies:
  #         - flake8-bugbear
  #         - flake8-comprehensions
  #         - flake8-simplify
  #       args: [--max-line-length=120, --extend-ignore=E203,W503]

  # Jupyter notebook cleaning
  # - repo: https://github.com/nbQA-dev/nbQA
  #   rev: 1.9.1
  #   hooks:
  #     - id: nbqa-ruff
  #       args: [--fix]
  #     - id: nbqa-ruff-format

# Configuration for pre-commit hooks
# default_stages: [pre-commit]
# fail_fast: false
# default_language_version:
  # python: python3.13

# Minimum pre-commit version
# minimum_pre_commit_version: 4.3.0

# CI configuration for pre-commit.ci
# ci:
#   autofix_commit_msg: |
#     [pre-commit.ci] auto fixes from pre-commit.com hooks

#     for more information, see https://pre-commit.ci
#   autofix_prs: true
#   autoupdate_branch: ''
#   autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
#   autoupdate_schedule: weekly
#   skip: []
#   submodules: false
